# -*- coding: utf-8 -*-
"""
Created on Fri Apr  3 11:32:20 2020

@author: roje0001
"""

import re, time
import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
#from dsci import webscrap as ws
try:
    UF = 'RJ'
    farma = 'DROGARIA LEGITIMA'
    url = 'http://www.drogariaslegitima.com.br/lojas/'
    master = []
    chrome_options = Options()
    chrome_options.add_argument('--headless')
    #'scripts/drivers/chromedriver',chrome_options=chrome_options
    driver = webdriver.Chrome()
    driver.get(url)
    time.sleep(10)
    elements = driver.find_elements_by_xpath('//html/body/div[1]/div/div[1]/div/div/div/section/article/div/div[2]/div/div/div/div[2]/div/div/div/div')
    n = len(elements)
    for i in range(1, n+1):
        element =  driver.find_element_by_xpath('/html/body/div[1]/div/div[1]/div/div/div/section/article/div/div[2]/div/div/div/div[2]/div/div/div/div[{}]'.format(i))
        end = element.text.split(' – ')
        if len(end)==2:
            cidade, bairro = end[0], end[1]
        else:
            cidade, bairro = 'Rio de Janeiro', end[0]
        element.click()
        time.sleep(3)
        fone = driver.find_element_by_xpath('/html/body/div[1]/div/div[1]')
        fone = re.findall('[0-9]+[\s]*-[\s]*[0-9][0-9][0-9][0-9]', fone.text)
        if len(fone)==2:
            fone_1, fone_2 = fone[0], fone[1]
        elif len(fone)==1:
            fone_1, fone_2 = fone[0], ''
        else:
            fone_1, fone_2 = '', ''
        frame = driver.find_elements_by_xpath('//iframe')[0]
        driver.switch_to_frame(frame)
        time.sleep(1)
        try:
            maps = driver.find_element_by_link_text('Visualizar mapa ampliado')
        except:
            maps = driver.find_element_by_link_text('View larger map')
        link = maps.get_attribute('href')
        maps_driver = webdriver.Chrome(chrome_options=chrome_options)
        maps_driver.get(link)
        time.sleep(5)
        try:
            info = maps_driver.find_element_by_xpath('/html/body/jsl/div[3]/div[9]/div[3]/div[1]/div[1]/div[1]/div[2]/form/div/div[3]/div/input')
            info = info.get_attribute('value').split(',')
            info = ' - '.join(info).split(' - ')
            endereco = info[0]
            num = info[1]
            if len(re.findall('[0-9]+', info[1])) == 0:
                num = ''
            UF = re.findall('[A-Z][A-Z]', ''.join(info[-2:]))[0]
            cep = re.findall('[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9]', ''.join(info))
            if len(cep)==1:
                cep = cep[0]
            else:
                cep = ''
        except:
             info = maps_driver.find_element_by_xpath('/html/body/jsl/div[3]/div[9]/div[8]/div/div[1]/div/div/div[8]/div/div[1]/span[3]')
             info = info.text.split(',')
             info = ' - '.join(info).split(' - ')
             endereco = info[0]
             num = info[1]
             if len(re.findall('[0-9]+', info[1])) == 0:
                num = ''
             UF = re.findall('[A-Z][A-Z]', ''.join(info[-2:]))[0]
             cep = re.findall('[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9]', ''.join(info))
             if len(cep)==1:
                cep = cep[0]
             else:
                cep = ''
        #armazena informações em lista de dicionario, convertidos em DataFrame
        dic = {"Farmacia": farma, "Local": '', 'Endereco': endereco, "Bairro": bairro , 
               "Municipio": cidade, "UF": UF, "CEP":cep, "Complemento": num,
               "H_semana": '', "H_sabado": '', "H_domingo": '',
               "DDD": '', "Telefone1": fone_1, "Telefone2": fone_2}
        master.append(dic)
        driver.switch_to_default_content()
        voltar = driver.find_elements_by_xpath('//img[@class="alignnone wp-image-3755"]')[0]
        webdriver.ActionChains(driver).move_to_element(voltar).click(voltar).perform()
        time.sleep(5)
    df = pd.DataFrame(master)
    df.to_csv("drogarialegitima.csv", encoding='utf-8-sig', index=False)
    ws.log_success(farma)
except Exception as error:
    print(error)
    ws.log_error(farma, 'Site down/Maintenance')
